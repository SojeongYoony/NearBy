/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.72
 * Generated at: 2021-12-14 16:22:34 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class join_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/D:/SmartWeb0809/springstudy/nearby/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/NEARBY/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1638721606326L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.6.0.js\" integrity=\"sha256-H+K7U5CnXl1h5ywQfKtSj8PCmoN9aaq30gDh27Xc0jk=\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("	$(document).ready(function(){\r\n");
      out.write("		fnCheckSubmit();             // 모든 함수 확인 후 서브밋넘기기\r\n");
      out.write("		fnbirth();                     // 생년월일 삽입\r\n");
      out.write("		fnIdCheck();				 \r\n");
      out.write("		fnPwCheck();				   \r\n");
      out.write("		fnPwDoubleCheck();\r\n");
      out.write("		fnNameCheck();\r\n");
      out.write("		fnEmailCheck();\r\n");
      out.write("		fnPhoneCheck();\r\n");
      out.write("		fnResetBtn();\r\n");
      out.write("	}); \r\n");
      out.write("	\r\n");
      out.write("	// 서브밋\r\n");
      out.write("	 function fnCheckSubmit(){\r\n");
      out.write("	    $('#join_form').on('submit',function(event){\r\n");
      out.write("	      if( confirm('가입하시겠습니까?') == false){\r\n");
      out.write("				event.preventDefault(); \r\n");
      out.write("	          return false;\r\n");
      out.write("			} else if (  id_result == false ) {\r\n");
      out.write("	            event.preventDefault();  \r\n");
      out.write("	            return false;    \r\n");
      out.write("			} else if ( pw_result == false ) {\r\n");
      out.write("                event.preventDefault(); \r\n");
      out.write("                return false;  \r\n");
      out.write("            } else if ( pw_double_result == false ) {\r\n");
      out.write("                event.preventDefault();  \r\n");
      out.write("                return false;  \r\n");
      out.write("            } else if ( name_result == false ) {\r\n");
      out.write("                event.preventDefault();  \r\n");
      out.write("                return false;  \r\n");
      out.write("            } else if ( email_result == false ) {\r\n");
      out.write("				event.preventDefault();\r\n");
      out.write("                return false;  \r\n");
      out.write("            } else if ( authCodePass == false ) { // 12/14 추가\r\n");
      out.write("				event.preventDefault();\r\n");
      out.write("				alert('이메일 인증을 진행해주세요'); \r\n");
      out.write("            	return false;\r\n");
      out.write("            } else if ( phone_result == false ) {\r\n");
      out.write("				event.preventDefault(); \r\n");
      out.write("               return false;\r\n");
      out.write("            } else \r\n");
      out.write("            	return true;\r\n");
      out.write("	        });\r\n");
      out.write("	    } //   function fnCheckSubmit()\r\n");
      out.write("	    \r\n");
      out.write("	\r\n");
      out.write("	// 생년월일 삽입\r\n");
      out.write("	function fnbirth(){\r\n");
      out.write("		let year = '';\r\n");
      out.write("		year +=  '<option value=\"year\">년도</option>';\r\n");
      out.write("		for(let i=2007; i>=1907; i--){\r\n");
      out.write("		    year += '<option value=\"'+i+'\">'+i+'</option>';\r\n");
      out.write("		}\r\n");
      out.write("		 $('#birthday').html(year);\r\n");
      out.write("		\r\n");
      out.write("		let month = '';\r\n");
      out.write("		month +=  '<option value=\"month\">월</option>';\r\n");
      out.write("		for(let i=1; i<=12; i++){\r\n");
      out.write("		    month += '<option value=\"'+i+'\">'+i+'</option>';\r\n");
      out.write("		}\r\n");
      out.write("		 $('#month').html(month);\r\n");
      out.write("		 \r\n");
      out.write("		 let day ='';\r\n");
      out.write("		 day += '<option value=\"day\">일</option>';\r\n");
      out.write("		 for(let i=1; i<=31; i++){\r\n");
      out.write("		     day += '<option value=\"'+i+'\">'+i+'</option>';\r\n");
      out.write("		 }\r\n");
      out.write("		  $('#day').html(day);	 \r\n");
      out.write("	}\r\n");
      out.write(" \r\n");
      out.write("    // 아이디\r\n");
      out.write("	let regId = /^[a-zA-Z0-9_-]{4,}$/;\r\n");
      out.write("    // 비밀번호\r\n");
      out.write("	let regPwd = /^[a-zA-Z0-9!@$%^&*()]{8,20}$/;\r\n");
      out.write("    // 이름\r\n");
      out.write("	let regName = /^[a-zA-Z가-힣]{1,30}$/;\r\n");
      out.write("    // 이메일\r\n");
      out.write("	let regEmail = /^[0-9a-zA-Z-_]+@[a-zA-Z0-9]+([.][a-zA-Z]{2,}){1,2}/;\r\n");
      out.write("    // 핸드폰 번호\r\n");
      out.write("	let regPhone = /^((01[1|6|7|8|9])[1-9]+[0-9]{6,7})|(010[1-9][0-9]{7})$/;\r\n");
      out.write("	let id_result = false;\r\n");
      out.write("	let pw_result = false;\r\n");
      out.write("	let pw_double_result = false;\r\n");
      out.write("	let name_result = false;\r\n");
      out.write("	let email_result = false;\r\n");
      out.write("	let authCodePass = false;\r\n");
      out.write("	let phone_result = false; \r\n");
      out.write("   \r\n");
      out.write("      \r\n");
      out.write("      function fnIdCheck(){   \r\n");
      out.write("            \r\n");
      out.write("            $(\"#id\").on('keyup blur',function(){\r\n");
      out.write("            	if ( regId.test($(this).val()) == false ) {\r\n");
      out.write("    				$('#id_check').text(\"아이디는 소문자/숫자 4자 이상 사용 가능합니다.\").addClass('error_msg').removeClass('pass_msg');\r\n");
      out.write("    				id_result = false;\r\n");
      out.write("    				return;\r\n");
      out.write("    			  }\r\n");
      out.write("				$.ajax({\r\n");
      out.write("					url : '/nearby/member/idCheck',\r\n");
      out.write("					type : 'post',\r\n");
      out.write("					data : 'id=' + $('#id').val(),\r\n");
      out.write("					dataType: 'json',               // 받아올 데이터 타입\r\n");
      out.write("					success : function(resData){\r\n");
      out.write("						 if( resData.result == null){\r\n");
      out.write("							 $('#id_check').text('사용 가능한 아이디').addClass(\"pass_msg\").removeClass('error_msg');\r\n");
      out.write("							 id_result = true;\r\n");
      out.write("						 } else if($('#id').val() == '' ){\r\n");
      out.write("							 $('#id_check').text('입력 필수입니다.').addClass('error_msg').removeClass('pass_msg');;\r\n");
      out.write("			                    id_result = false;\r\n");
      out.write("			             } else if(resData.result != null) {\r\n");
      out.write("							 $('#id_check').text('이미 사용중인 아이디').addClass('error_msg').removeClass('pass_msg');;\r\n");
      out.write("							 id_result = false;\r\n");
      out.write("						 }\r\n");
      out.write("					},\r\n");
      out.write("					error : function(xhr, ajaxOptions, thrownError) {\r\n");
      out.write("				       alert(xhr.responseText);\r\n");
      out.write("				//		console.log(xhr.status);\r\n");
      out.write("				  //      console.log(thrownError);\r\n");
      out.write("					}\r\n");
      out.write("					\r\n");
      out.write("				}) // ajax\r\n");
      out.write("				 console.log(\"id: \"+id_result);\r\n");
      out.write("				  return id_result;	 \r\n");
      out.write("			}); // id\r\n");
      out.write("    } // fnId\r\n");
      out.write("        \r\n");
      out.write("      // 비밀번호 정규식 \r\n");
      out.write("      function fnPwCheck(){\r\n");
      out.write("         \r\n");
      out.write("         $('#pw').on('blur keyup', function(){\r\n");
      out.write("            if( regPwd.test( $(\"#pw\").val())){    \r\n");
      out.write("                $(\"#pw_check\").text(\"사용가능한 비밀번호입니다.\").addClass(\"pass_msg\").removeClass('error_msg');\r\n");
      out.write("                pw_result = true;\r\n");
      out.write("            } else if (    $('#pw').val() == '' ){\r\n");
      out.write("                $(\"#pw_check\").text('입력은 필수입니다.').addClass('error_msg').removeClass('pass_msg');\r\n");
      out.write("                pw_result = false;\r\n");
      out.write("            }    else {\r\n");
      out.write("                $(\"#pw_check\").text(\"비밀번호는 8~20자의 영문 대/소문자, 숫자, 특수문자 등 3종류 이상으로 조합해주세요.\").addClass('error_msg').removeClass('pass_msg');\r\n");
      out.write("                pw_result = false;\r\n");
      out.write("            }\r\n");
      out.write("         console.log(\"pw: \"+pw_result);\r\n");
      out.write("            return pw_result;\r\n");
      out.write("         }); \r\n");
      out.write("      \r\n");
      out.write("      } // fnPwCheck\r\n");
      out.write("      \r\n");
      out.write("   // 비밀번호 재확인 일치 \r\n");
      out.write("         function fnPwDoubleCheck(){\r\n");
      out.write("          \r\n");
      out.write("          $('#pwCheck').on('blur keyup', function(){     \r\n");
      out.write("                if($('#pw').val() !=  $(\"#pwCheck\").val() ){\r\n");
      out.write("                    $(\"#pw_doubleCheck\").text( '비밀번호가 일치하지 않습니다.').addClass('error_msg').removeClass('pass_msg');\r\n");
      out.write("                    pw_double_result = false;\r\n");
      out.write("                } else{\r\n");
      out.write("                    $(\"#pw_doubleCheck\").text('').removeClass('error_msg').removeClass('pass_msg');\r\n");
      out.write("                    pw_double_result = true;\r\n");
      out.write("                }  \r\n");
      out.write("          console.log(\"pw2 : \"+pw_double_result);\r\n");
      out.write("          return pw_double_result;\r\n");
      out.write("            });\r\n");
      out.write("      }\r\n");
      out.write("          \r\n");
      out.write("      // 이름 정규식\r\n");
      out.write("        function fnNameCheck() {  \r\n");
      out.write("           $('#name').on('blur', function(){\r\n");
      out.write("               if( regName.test( $(this).val())){    \r\n");
      out.write("                 $('#name_check').text('');\r\n");
      out.write("                 $('#name_check').removeClass('error_msg');\r\n");
      out.write("                 name_result = true;\r\n");
      out.write("               } else if ( $('#name').val() == '' ){\r\n");
      out.write("                   $('#name_check').text('이름은 필수입니다.').addClass('error_msg').removeClass('pass_msg');\r\n");
      out.write("                   name_result = false;\r\n");
      out.write("               }  else if( regName.test( $(this).val()) == false){    \r\n");
      out.write("                   $('#name_check').text('잘못된 이름 형식입니다.').addClass('error_msg').removeClass('pass_msg'); \r\n");
      out.write("                   name_result = false;\r\n");
      out.write("               }\r\n");
      out.write("           console.log(name_result);\r\n");
      out.write("               return name_result;\r\n");
      out.write("           });\r\n");
      out.write("         \r\n");
      out.write("          } // fnName\r\n");
      out.write("          \r\n");
      out.write("        // 이메일    \r\n");
      out.write("      function  fnEmailCheck(){\r\n");
      out.write("         $('#email').on('blur', function(){\r\n");
      out.write("                  if( regEmail.test( $('#email').val())){    \r\n");
      out.write("                    \r\n");
      out.write("                      $.ajax({\r\n");
      out.write("      					url : '/nearby/member/selectByEmail',\r\n");
      out.write("      					type : 'post',\r\n");
      out.write("      					data : 'email=' + $('#email').val(),\r\n");
      out.write("      					dataType: 'json',               // 받아올 데이터 타입\r\n");
      out.write("      					success : function(resData){\r\n");
      out.write("      					 if(resData.result == null) {\r\n");
      out.write("      						  $('#email_check').text('사용 가능한 이메일입니다.').addClass('pass_msg').removeClass('error_msg');\r\n");
      out.write("                        	   email_result = true;\r\n");
      out.write("                        	   fnSendAuthCode();\r\n");
      out.write("                        	   return;\r\n");
      out.write("      					 } else if(resData.result != null) {\r\n");
      out.write("      			            	 $('#email_check').text('이미 사용중인 이메일입니다.').addClass('error_msg').removeClass('pass_msg');\r\n");
      out.write("      							 email_result = false;\r\n");
      out.write("      						 }\r\n");
      out.write("      					},\r\n");
      out.write("      					error : function(xhr, ajaxOptions, thrownError) {\r\n");
      out.write("      				       alert(xhr.responseText);\r\n");
      out.write("      					}\r\n");
      out.write("      				}) // ajax\r\n");
      out.write("                   \r\n");
      out.write("                   } else if( $('#email').val() ==''  ) {\r\n");
      out.write("                	   $('#email_check').text('이메일은 필수입니다.').addClass('error_msg').removeClass('pass_msg');\r\n");
      out.write("                   } else{\r\n");
      out.write("                       $('#email_check').text('잘못된 이메일 형식입니다.').addClass('error_msg').removeClass('pass_msg');\r\n");
      out.write("                       email_result = false;\r\n");
      out.write("                  }\r\n");
      out.write("                  return email_result;\r\n");
      out.write("           });\r\n");
      out.write("         } // fnEmail\r\n");
      out.write("         \r\n");
      out.write("         function fnSendAuthCode(){\r\n");
      out.write("         	\r\n");
      out.write("         	$('#authCode_btn').click(function(){\r\n");
      out.write("         		$.ajax({\r\n");
      out.write("         			url : '/nearby/member/sendAuthCode',\r\n");
      out.write("         			type: 'post',\r\n");
      out.write("         			data: 'email='+ $('#email').val(),\r\n");
      out.write("         			dataType: 'json',\r\n");
      out.write("         			success : function(map) {\r\n");
      out.write("         				alert('인증코드가 발송되었습니다.');\r\n");
      out.write("         				fnVerifyAuthcode(map.authCode); // 12/13추가\r\n");
      out.write("         			//	alert(map.authCode);   ==> SecurityUtils에 authCode 확인용 sysout 추가\r\n");
      out.write("         			},\r\n");
      out.write("         			error: function() {\r\n");
      out.write("     					alert('인증코드 전송 실패');\r\n");
      out.write("     				}\r\n");
      out.write("         		});	 // ajax\r\n");
      out.write("         	});\r\n");
      out.write("         	return;\r\n");
      out.write("         }\r\n");
      out.write("/* ******************* 12/14 수정 ************* fnVerifyAuthcode() ********************* */\r\n");
      out.write("      	// 인증코드 검증 변수와 함수\r\n");
      out.write("      	function fnVerifyAuthcode(authCode){\r\n");
      out.write("      		$('#verify_btn').click(function(){\r\n");
      out.write("      			if ( $('#authCode').val() == authCode ) {\r\n");
      out.write("      				alert('인증되었습니다.');\r\n");
      out.write("      				authCodePass = true;\r\n");
      out.write("      			} else if ( $('#authCode').val() == '' ) { // 12/14 추가\r\n");
      out.write("      				alert('인증번호를 입력하세요');\r\n");
      out.write("      				authCodePass = false;\r\n");
      out.write("      			} else {\r\n");
      out.write("      				alert('인증에 실패했습니다.');\r\n");
      out.write("      				authCodePass = false;\r\n");
      out.write("      			}\r\n");
      out.write("      			\r\n");
      out.write("      		}); // end click\r\n");
      out.write("      	}         \r\n");
      out.write(" /* ************************************************************************************ */\r\n");
      out.write("         \r\n");
      out.write("     \r\n");
      out.write("          // 핸드폰\r\n");
      out.write("      function	fnPhoneCheck() {\r\n");
      out.write("           $('#phone').on('blur', function(){\r\n");
      out.write("               if( regPhone.test( $('#phone').val())){    \r\n");
      out.write("                   $('#phone_check').text('');\r\n");
      out.write("                   $('#phone_check').removeClass('error_msg');\r\n");
      out.write("                   phone_result = true;\r\n");
      out.write("               } else if ($('#phone').val() == '' ){\r\n");
      out.write("                   $('#phone_check').text('핸드폰번호는 필수입니다.');\r\n");
      out.write("                   $('#phone_check').addClass('error_msg');\r\n");
      out.write("                   phone_result = false;\r\n");
      out.write("               } else {\r\n");
      out.write("                   $('#phone_check').text('잘못된 형식입니다.');\r\n");
      out.write("                   $('#phone_check').addClass('error_msg');\r\n");
      out.write("                   phone_result = false;\r\n");
      out.write("               }\r\n");
      out.write("               return phone_result;\r\n");
      out.write("           });\r\n");
      out.write("    }  // fnPhone\r\n");
      out.write("    \r\n");
      out.write("  \r\n");
      out.write("    \r\n");
      out.write("  // reset_btn 클릭시 msg 없애기\r\n");
      out.write("  function fnResetBtn(){\r\n");
      out.write("    $('#reset_btn').on('click',function(){\r\n");
      out.write("    	$('#id_check').text('');\r\n");
      out.write("    	$('#pw_check').text('');\r\n");
      out.write("    	$('#pw_double_check').text('');\r\n");
      out.write("    	$('#name_check').text('');\r\n");
      out.write("    	$('#email_check').text('');\r\n");
      out.write("    	$('#authCode').text('');\r\n");
      out.write("    	$('#phone_check').text('');\r\n");
      out.write("    })\r\n");
      out.write("   }\r\n");
      out.write("</script>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("   .error_msg {\r\n");
      out.write("   	font-size:13px;\r\n");
      out.write("   	color:red;\r\n");
      out.write("   }\r\n");
      out.write("   .pass_msg {\r\n");
      out.write("   	font-size:13px;\r\n");
      out.write("   	color:grey;\r\n");
      out.write("   }\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write(" <!-- 레이아웃 header 삽입하기 -->\r\n");
      out.write(" \r\n");
      out.write(" \r\n");
      out.write("   <h2>회원가입 페이지</h2>\r\n");
      out.write("	<form action=\"/nearby/member/insertMember\" method=\"post\" id=\"join_form\">\r\n");
      out.write("	<div>\r\n");
      out.write("		<label for=\"id\">아이디</label><input type=\"text\" id=\"id\" name=\"id\">\r\n");
      out.write("		<span id=\"id_check\"></span>\r\n");
      out.write("	</div>\r\n");
      out.write("	<div>\r\n");
      out.write("		<label for=\"pw\">비밀번호</label><input type=\"text\" id=\"pw\" name=\"pw\">\r\n");
      out.write("		<span id=\"pw_check\"></span>\r\n");
      out.write("	</div>\r\n");
      out.write("	<div>\r\n");
      out.write("		<label for=\"pw\">비밀번호 재확인</label><input type=\"text\" id=\"pwCheck\" >\r\n");
      out.write("		<span id=\"pw_doubleCheck\"></span>\r\n");
      out.write("	</div>\r\n");
      out.write("	<div>\r\n");
      out.write("		<label for=\"name\">이름</label><input type=\"text\" id=\"name\" name=\"name\">\r\n");
      out.write("		<span id=\"name_check\"></span>\r\n");
      out.write("	</div>\r\n");
      out.write("	<div>\r\n");
      out.write("		<label for=\"email\">이메일</label><input type=\"text\" id=\"email\" name=\"email\" >\r\n");
      out.write("		<input type=\"button\" value=\"인증번호받기\" id=\"authCode_btn\"><br>\r\n");
      out.write("		<span id=\"email_check\"></span><br>\r\n");
      out.write("		<input type=\"text\" name=\"authCode\" id=\"authCode\">\r\n");
      out.write("		<input type=\"button\" value=\"인증하기\" id=\"verify_btn\">\r\n");
      out.write("	</div>\r\n");
      out.write("	<div>\r\n");
      out.write("		<label for=\"phone\">번호</label><input type=\"text\" id=\"phone\" name=\"phone\" placeholder=\" -표시 없이 입력해주세요\">\r\n");
      out.write("		<span id=\"phone_check\"></span>\r\n");
      out.write("	</div>\r\n");
      out.write("	<div>\r\n");
      out.write("		<label for=\"birthday\">생년월일</label>\r\n");
      out.write("		 <select id=\"birthday\" name=\"year\">\r\n");
      out.write("		 	\r\n");
      out.write("		 </select>\r\n");
      out.write("		  <select id=\"month\" name=\"month\">\r\n");
      out.write("		 	<option value=\"월\"></option>\r\n");
      out.write("		 </select>\r\n");
      out.write("		  <select id=\"day\" name=\"day\">\r\n");
      out.write("		 	<option value=\"일\"></option>\r\n");
      out.write("		 </select>\r\n");
      out.write("	</div>\r\n");
      out.write("		<div>		\r\n");
      out.write("		 <p id=\"gender_box\">성별</p>\r\n");
      out.write("		  <input type=\"radio\" name=\"gender\" value=\"f\" id=\"female\" checked>\r\n");
      out.write("                        <label id=\"f\" for=\"female\">여성</label>\r\n");
      out.write("          <input type=\"radio\" name=\"gender\" value=\"m\" id=\"male\">\r\n");
      out.write("                        <label id=\"m\"  for=\"male\">남성</label>\r\n");
      out.write("          <input type=\"radio\" name=\"gender\" value=\"n\" id=\"n\">\r\n");
      out.write("                        <label id=\"n\"  for=\"n\">선택안함</label>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div id=\"join_btn_wrap\">\r\n");
      out.write("  	      <button class=\"btn btn-primary\">회원가입</button>                 \r\n");
      out.write("       	  <input type=\"reset\" value=\"다시작성\" id=\"reset\" class=\"reset\">                \r\n");
      out.write("        </div>                \r\n");
      out.write("	</form>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
