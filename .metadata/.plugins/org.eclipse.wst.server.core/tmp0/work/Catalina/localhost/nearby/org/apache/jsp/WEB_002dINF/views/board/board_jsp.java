/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.72
 * Generated at: 2021-12-20 13:02:43 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class board_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/D:/SmartWeb0809/springstudy/nearby/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/NEARBY/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1638721606326L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.6.0.js\" integrity=\"sha256-H+K7U5CnXl1h5ywQfKtSj8PCmoN9aaq30gDh27Xc0jk=\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css\" integrity=\"sha512-1ycn6IcaQQ40/MKBW2W4Rhis/DbILU74C1vSrLJxCq57o941Ym01SwNsOMqvEBFlcgUa6xLiPY/NS5R+E6ztJQ==\" crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\" />\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/header.css\" />\r\n");
      out.write("\r\n");
      out.write(" \r\n");
      out.write(" <script type=\"text/javascript\" src=\"https://openapi.map.naver.com/openapi/v3/maps.js?ncpClientId=4lnq99nnpg&submodules=geocoder\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("  $(document).ready(function(){\r\n");
      out.write("      fnFileCheck();\r\n");
      out.write("      $(\"#file\").click(function(){\r\n");
      out.write("         $(\"#map\").css('display', 'none');\r\n");
      out.write("      })\r\n");
      out.write("        \r\n");
      out.write("   });\r\n");
      out.write("  \r\n");
      out.write("  \r\n");
      out.write("   \r\n");
      out.write("   function fnFileCheck(){\r\n");
      out.write("      \r\n");
      out.write("      $(\"#modify_file\").on('change',function(){\r\n");
      out.write("         let origin = $(this).val();      // 첨부된 파일명\r\n");
      out.write("         let extName = origin.substring(origin.lastIndexOf(\".\")+1 ).toUpperCase();     // 확장자 대문자로 저장 \r\n");
      out.write("         \r\n");
      out.write("         // 확장자 정보\r\n");
      out.write("         if( $.inArray(extName, [\"JPG\", \"PNG\", \"JPEG\", \"GIF\",\"MP4\", \"MPEG\", \"AVI\", \"MOV\", \"M4V\"])  == -1 )  {  // 첨부된 파일이 [\"JPG\", \"PNG\", \"JPEC\", \"GIF\"] 중 하나가 아니면\r\n");
      out.write("             alert('업로드 할 수 없는 확장자입니다.');\r\n");
      out.write("            $(this).val('');\r\n");
      out.write("            return;\r\n");
      out.write("         }\r\n");
      out.write("         \r\n");
      out.write("         // 파일크기점검\r\n");
      out.write("         let maxSize = 1024 * 1024 * 1000;            // 최대크기 10MB\r\n");
      out.write("         let fileSize = $(this)[0].files[0].size;       // 첨부된 파일 크기\r\n");
      out.write("         if ( fileSize > maxSize ){\r\n");
      out.write("            alert('1GB 이하의 파일만 업로드가 가능합니다.');\r\n");
      out.write("            $(this).val('');\r\n");
      out.write("            return;\r\n");
      out.write("         }\r\n");
      out.write("      });\r\n");
      out.write("   }\r\n");
      out.write("   \r\n");
      out.write("   \r\n");
      out.write("   function readURL(input) {\r\n");
      out.write("      if (input.files && input.files[0]) {\r\n");
      out.write("         let image = [\"JPG\", \"PNG\", \"JPEG\", \"GIF\",];\r\n");
      out.write("         let video = [\"MP4\", \"MPEG\", \"AVI\", \"MOV\", \"M4V\"];\r\n");
      out.write("         var reader = new FileReader();\r\n");
      out.write("         reader.onload = function(e) {\r\n");
      out.write("            if(  image.includes(input.files[0].name.split('.').pop().toUpperCase() )){\r\n");
      out.write("            document.getElementById('previewImg').src = e.target.result;\r\n");
      out.write("            $(\"#previewImg\").css('display', 'block');\r\n");
      out.write("            $(\"#previewVideo\").css('display', 'none');\r\n");
      out.write("            }\r\n");
      out.write("             else if (    video.includes(input.files[0].name.split('.').pop().toUpperCase() )        )  {\r\n");
      out.write("                document.getElementById('previewVideo').src = e.target.result;\r\n");
      out.write("                  $(\"#previewVideo\").css('display', 'block');\r\n");
      out.write("                  $(\"#previewImg\").css('display', 'none');\r\n");
      out.write("                \r\n");
      out.write("             }\r\n");
      out.write("         };\r\n");
      out.write("   \r\n");
      out.write("            reader.readAsDataURL(input.files[0]);\r\n");
      out.write("         \r\n");
      out.write("         // console.log(input.files[0].name.split('.').pop().toLowerCase());\r\n");
      out.write("         $('#modify_file').css('display', 'block');\r\n");
      out.write("         $(\"#previewImg\").css('display', 'block');\r\n");
      out.write("         $('#img_wrap').css('padding', '0');\r\n");
      out.write("         $('#file_label').css('display', 'none');\r\n");
      out.write("      \r\n");
      out.write("         $('#upload').css('display', 'none');\r\n");
      out.write("      } else {\r\n");
      out.write("         document.getElementById('preview').src = \"\";\r\n");
      out.write("      }\r\n");
      out.write("   }\r\n");
      out.write("   \r\n");
      out.write("   \r\n");
      out.write("\r\n");
      out.write("   function map() {\r\n");
      out.write("      $(\"#map\").css('display', 'block');\r\n");
      out.write("      \r\n");
      out.write("      var map = new naver.maps.Map(\"map\", {\r\n");
      out.write("           center: new naver.maps.LatLng(37.55415109162072, 126.93582461156707),\r\n");
      out.write("           zoom: 15,\r\n");
      out.write("           mapTypeControl: true\r\n");
      out.write("         });\r\n");
      out.write("\r\n");
      out.write("       map.setOptions({ //모든 지도 컨트롤 숨기기\r\n");
      out.write("               scaleControl: false,\r\n");
      out.write("               logoControl: false,\r\n");
      out.write("               mapDataControl: false,\r\n");
      out.write("               zoomControl: false,\r\n");
      out.write("               mapTypeControl: false\r\n");
      out.write("           });\r\n");
      out.write("      \r\n");
      out.write("      \r\n");
      out.write("         var infoWindow = new naver.maps.InfoWindow({\r\n");
      out.write("             anchorSkew: true,\r\n");
      out.write("             backgroundColor: \"none\",\r\n");
      out.write("             Color: \"pink\",\r\n");
      out.write("             borderColor: \"none\",\r\n");
      out.write("             borderWidth: \"none\",\r\n");
      out.write("             anchorSize: new naver.maps.Size(0, 0),\r\n");
      out.write("             display:  \"none\"\r\n");
      out.write("         });\r\n");
      out.write("\r\n");
      out.write("         \r\n");
      out.write("         var marker = new naver.maps.Marker({\r\n");
      out.write("             position: new naver.maps.LatLng(37.55415109162072, 126.93582461156707),\r\n");
      out.write("             map: map\r\n");
      out.write("         });\r\n");
      out.write("\r\n");
      out.write("         naver.maps.Event.addListener(map, 'click', function(e) {\r\n");
      out.write("             marker.setPosition(e.coord);\r\n");
      out.write("         });\r\n");
      out.write("         \r\n");
      out.write("         map.setCursor('marker');\r\n");
      out.write("\r\n");
      out.write("         \r\n");
      out.write("\r\n");
      out.write("    // 포인트(클릭)\r\n");
      out.write("   function searchCoordinateToAddress(latlng) {\r\n");
      out.write("\r\n");
      out.write("        infoWindow.close();\r\n");
      out.write("\r\n");
      out.write("        naver.maps.Service.reverseGeocode({\r\n");
      out.write("          coords: latlng,\r\n");
      out.write("          orders: [\r\n");
      out.write("            naver.maps.Service.OrderType.ADDR,\r\n");
      out.write("            naver.maps.Service.OrderType.ROAD_ADDR\r\n");
      out.write("          ].join(',')\r\n");
      out.write("        }, function(status, response) {\r\n");
      out.write("          if (status === naver.maps.Service.Status.ERROR) {\r\n");
      out.write("            if (!latlng) {\r\n");
      out.write("              return alert('다시 입력해주세요');\r\n");
      out.write("            }\r\n");
      out.write("            if (latlng.toString) {\r\n");
      out.write("              return  alert('다시 입력해주세요');\r\n");
      out.write("            }\r\n");
      out.write("            if (latlng.x && latlng.y) {\r\n");
      out.write("              return  alert('다시 입력해주세요'); \r\n");
      out.write("            }\r\n");
      out.write("            return  alert('다시 입력해주세요'); \r\n");
      out.write("          }\r\n");
      out.write("\r\n");
      out.write("          var address = response.v2.address,\r\n");
      out.write("              htmlAddresses = [];\r\n");
      out.write("          \r\n");
      out.write("         \r\n");
      out.write("          document.insertBoard_Form.location.value = address.jibunAddress;\r\n");
      out.write("          var sub = address.jibunAddress.split(' ');\r\n");
      out.write("          var nearbyAddress = sub[0]+\" \"+sub[1]+\" \"+sub[2];\r\n");
      out.write("          document.insertBoard_Form.location.value = nearbyAddress;\r\n");
      out.write("          document.insertBoard_Form.addr_remove.value ='';\r\n");
      out.write("\r\n");
      out.write("          if (address.jibunAddress !== '') {\r\n");
      out.write("              htmlAddresses.push(address.jibunAddress);\r\n");
      out.write("          }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("          infoWindow.setContent([\r\n");
      out.write("            '<div style=\"padding:10px;min-width:100px;line-height:100%;font-size:10px; display:none\">',\r\n");
      out.write("            htmlAddresses.join('<br />'),\r\n");
      out.write("            '</div>'\r\n");
      out.write("          ].join('\\n'));\r\n");
      out.write("          \r\n");
      out.write("          $('#address').val(htmlAddresses);\r\n");
      out.write("          \r\n");
      out.write("\r\n");
      out.write("          infoWindow.open(map, latlng);\r\n");
      out.write("        });\r\n");
      out.write("      }\r\n");
      out.write("    \r\n");
      out.write("    //검색했을 때\r\n");
      out.write("   function searchAddressToCoordinate(address) {\r\n");
      out.write("        naver.maps.Service.geocode({\r\n");
      out.write("          query: address\r\n");
      out.write("        }, function(status, response) {\r\n");
      out.write("          if (status === naver.maps.Service.Status.ERROR) {\r\n");
      out.write("            if (!address) {\r\n");
      out.write("              return alert('죄송합니다. 다시 입력해주세요');\r\n");
      out.write("            }\r\n");
      out.write("            return  alert('죄송합니다. 다시 입력해주세요');\r\n");
      out.write("          }\r\n");
      out.write("\r\n");
      out.write("          if (response.v2.meta.totalCount === 0) {\r\n");
      out.write("            return  alert('죄송합니다. 다시 입력해주세요');\r\n");
      out.write("          }\r\n");
      out.write("          \r\n");
      out.write("\r\n");
      out.write("          var htmlAddresses = [],\r\n");
      out.write("            item = response.v2.addresses[0],\r\n");
      out.write("            point = new naver.maps.Point(item.x, item.y);\r\n");
      out.write("          console.log(item);     // item 객체에 지번, 도로명, 위도, 경도 필드존재함\r\n");
      out.write("          document.insertBoard_Form.location.value = item.jibunAddress;\r\n");
      out.write("          console.log(item.jibunAddress);\r\n");
      out.write("          var sub = item.jibunAddress.split(' ');\r\n");
      out.write("         \r\n");
      out.write("          var nearbyAddress = sub[0]+\" \"+sub[1]+\" \"+sub[2];\r\n");
      out.write("          document.insertBoard_Form.location.value = nearbyAddress;\r\n");
      out.write("          console.log(nearbyAddress )\r\n");
      out.write("          \r\n");
      out.write("          \r\n");
      out.write("         // 주소 검색 할 때 item.x   item.y\r\n");
      out.write("          if (item.roadAddress) {\r\n");
      out.write("          }\r\n");
      out.write("\r\n");
      out.write("          if (item.jibunAddress) {\r\n");
      out.write("         htmlAddresses.push( item.jibunAddress);\r\n");
      out.write("          }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("          infoWindow.setContent([\r\n");
      out.write("            '<div style=\"padding:10px;min-width:50px;line-height:100%;font-size:10px;  display:none;\">',\r\n");
      out.write("            htmlAddresses.join('<br />'),\r\n");
      out.write("            '</div>'\r\n");
      out.write("          ].join('\\n'));\r\n");
      out.write("         \r\n");
      out.write("          map.setCenter(point);\r\n");
      out.write("          infoWindow.open(map, point);\r\n");
      out.write("          \r\n");
      out.write("        });\r\n");
      out.write("      }\r\n");
      out.write("   \r\n");
      out.write("   function initGeocoder() {\r\n");
      out.write("        if (!map.isStyleMapReady) {\r\n");
      out.write("          return;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        map.addListener('click', function(e) {\r\n");
      out.write("          searchCoordinateToAddress(e.coord);\r\n");
      out.write("         // alert(e.coord.lat() + ', ' + e.coord.lng());  // 클릭하면 위도경도\r\n");
      out.write("   \r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        $('#address').on('keydown', function(e) {\r\n");
      out.write("          var keyCode = e.which;\r\n");
      out.write("\r\n");
      out.write("          if (keyCode === 13) { // Enter Key\r\n");
      out.write("            searchAddressToCoordinate($('#address').val());\r\n");
      out.write("          }\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        $('#submit').on('click', function(e) {\r\n");
      out.write("          e.preventDefault();\r\n");
      out.write("\r\n");
      out.write("          searchAddressToCoordinate($('#address').val());\r\n");
      out.write("        \r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        searchAddressToCoordinate('노고산동 106-1');\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      naver.maps.onJSContentLoaded = initGeocoder;\r\n");
      out.write("      naver.maps.Event.once(map, 'init_stylemap', initGeocoder);\r\n");
      out.write("   }\r\n");
      out.write("</script>\r\n");
      out.write("<style>\r\n");
      out.write("   *{\r\n");
      out.write("      padding: 0;\r\n");
      out.write("      margin: 0;\r\n");
      out.write("      box-sizing: border-box;   \r\n");
      out.write("      width: 100%;\r\n");
      out.write("   }\r\n");
      out.write("   .insert_wrap a {\r\n");
      out.write("      text-decoration: none;\r\n");
      out.write("      color: black;\r\n");
      out.write("      font-weight: bold;\r\n");
      out.write("   }\r\n");
      out.write("    body{\r\n");
      out.write("         width:100%;\r\n");
      out.write("        margin: 0 auto;\r\n");
      out.write("      }\r\n");
      out.write("     .insert_wrap {\r\n");
      out.write("         position: relative;\r\n");
      out.write("        width:600px;\r\n");
      out.write("        height : 900px;\r\n");
      out.write("        margin: 30px auto 10px;\r\n");
      out.write("        padding: 30px 30px;\r\n");
      out.write("        background-color: white;\r\n");
      out.write("        border : 1px solid #fe4662; \r\n");
      out.write("        border-radius: 8px;\r\n");
      out.write("     }\r\n");
      out.write("     \r\n");
      out.write("   <!-- 기본 정보 관련 --> \r\n");
      out.write("   .id_wrap{  height: 50px;  }\r\n");
      out.write("    #board_writer {\r\n");
      out.write("         font-weight: bold;\r\n");
      out.write("         font-size: 18px;\r\n");
      out.write("      display: inline-block;\r\n");
      out.write("      margin-left: 10px;\r\n");
      out.write("      width: 100px;\r\n");
      out.write("   }\r\n");
      out.write("    .setting { \r\n");
      out.write("         position:absolute;\r\n");
      out.write("       color: #fe4662; \r\n");
      out.write("       font-size:20px;\r\n");
      out.write("       width:30px;\r\n");
      out.write("       right: 40px;\r\n");
      out.write("    }\r\n");
      out.write("   input::placeholder {  font-size: 6px;   }\r\n");
      out.write("     \r\n");
      out.write("     \r\n");
      out.write("     \r\n");
      out.write("   \r\n");
      out.write("   #map { display:none; }\r\n");
      out.write("  \r\n");
      out.write("   .search { \r\n");
      out.write("         position:absolute;\r\n");
      out.write("         z-index:1000;\r\n");
      out.write("         top:15px;\r\n");
      out.write("         left:15px; \r\n");
      out.write("      }\r\n");
      out.write("   .search #address { \r\n");
      out.write("       width:280px;\r\n");
      out.write("       height:20px;\r\n");
      out.write("       line-height:20px;\r\n");
      out.write("       border:solid 1px #555;\r\n");
      out.write("       padding:5px;\r\n");
      out.write("       font-size:12px;\r\n");
      out.write("       box-sizing:content-box;\r\n");
      out.write("          }\r\n");
      out.write("   .search #submit { \r\n");
      out.write("         height:30px;\r\n");
      out.write("         width: 55px;\r\n");
      out.write("         line-height:30px;\r\n");
      out.write("         padding:0 10px;\r\n");
      out.write("         font-size:12px;\r\n");
      out.write("         border:solid 1px #555;\r\n");
      out.write("         border-radius:3px;\r\n");
      out.write("         cursor:pointer;\r\n");
      out.write("         box-sizing:content-box; \r\n");
      out.write("      }\r\n");
      out.write("   .location {   \r\n");
      out.write("         width:280px;\r\n");
      out.write("         height:20px;\r\n");
      out.write("         line-height:20px;\r\n");
      out.write("         border:none; \r\n");
      out.write("         padding:5px; \r\n");
      out.write("         padding-left:10px; \r\n");
      out.write("         font-size:10px;  \r\n");
      out.write("         border: none;\r\n");
      out.write("         font-size: 15px;\r\n");
      out.write("         outline: none;\r\n");
      out.write("      }\r\n");
      out.write("   .myMap{\r\n");
      out.write("         margin: 20px 0;\r\n");
      out.write("         width:400px;\r\n");
      out.write("   }\r\n");
      out.write("   .myMap i {     width: 20px;  }\r\n");
      out.write("   #map {     margin-bottom: 20px;  }\r\n");
      out.write("   #map ul li {\r\n");
      out.write("      display: none;\r\n");
      out.write("      border: none;\r\n");
      out.write("   }\r\n");
      out.write("   #map ul {    display: none; \r\n");
      out.write("   }\r\n");
      out.write("   \r\n");
      out.write("   \r\n");
      out.write("   \r\n");
      out.write(" \r\n");
      out.write("   #img_wrap{\r\n");
      out.write("         border:1px solid black;\r\n");
      out.write("         width:480px; \r\n");
      out.write("         height: 320px;\r\n");
      out.write("          padding:30px; \r\n");
      out.write("          margin:0 auto;\r\n");
      out.write("         font-size:30px;\r\n");
      out.write("         background-color: #f0f2f5;\r\n");
      out.write("         border: none;\r\n");
      out.write("         border-radius: 5px;\r\n");
      out.write("   }\r\n");
      out.write("   #modify_file {\r\n");
      out.write("         display: inline-block;\r\n");
      out.write("         margin: 10px 0;\r\n");
      out.write("         font-size: 13px;\r\n");
      out.write("   }\r\n");
      out.write("   #file_label, #upload {\r\n");
      out.write("         display: inline-block;\r\n");
      out.write("         margin: 30px auto;\r\n");
      out.write("         text-align: center;\r\n");
      out.write("         color: gray;   \r\n");
      out.write("   }\r\n");
      out.write("   \r\n");
      out.write("   .profileImg{\r\n");
      out.write("         width : 90px;\r\n");
      out.write("      height : 80px;\r\n");
      out.write("      border : 1px solid silver;\r\n");
      out.write("       display: inline-block;\r\n");
      out.write("       border-radius: 100%;\r\n");
      out.write("      margin-right: 10px;\r\n");
      out.write("   }\r\n");
      out.write("\r\n");
      out.write("   #previewImg {\r\n");
      out.write("         width:480px;\r\n");
      out.write("         height: 320px;\r\n");
      out.write("         display:none;\r\n");
      out.write("         z-index: 100;\r\n");
      out.write("   }\r\n");
      out.write("   #previewVideo {\r\n");
      out.write("         width:480px;\r\n");
      out.write("         height: 320px;\r\n");
      out.write("         display:none;\r\n");
      out.write("         border: none;\r\n");
      out.write("         z-index: 100;\r\n");
      out.write("   }\r\n");
      out.write("   .content_wrap {    \r\n");
      out.write("       margin: 30px auto 15px;     }\r\n");
      out.write("   .content_wrap #content {\r\n");
      out.write("         height: 40px;\r\n");
      out.write("         padding-left: 10px;\r\n");
      out.write("         background-color:#f0f2f5;\r\n");
      out.write("         border: none;\r\n");
      out.write("        border-radius: 5px;\r\n");
      out.write("        outline: none;\r\n");
      out.write("   }\r\n");
      out.write("   #insert_btn { border-bottom: 8px solid  #fe4662;   }\r\n");
      out.write("   .fa-plus-square { color: #fe4662; }\r\n");
      out.write("   #insertBtn { \r\n");
      out.write("         width: 100%;\r\n");
      out.write("         height: 30px;\r\n");
      out.write("         margin-top: 5px; \r\n");
      out.write("         color: white;\r\n");
      out.write("         background-color:  #fe4662; \r\n");
      out.write("         border: none;\r\n");
      out.write("         border-radius: 5px;\r\n");
      out.write("         outline: none;\r\n");
      out.write("    }\r\n");
      out.write("   #footer_wrap {  height: 80px; }\r\n");
      out.write("   \r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("   \r\n");
      out.write("   ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/views/layout/header.jsp", out, true);
      out.write("\r\n");
      out.write("   \r\n");
      out.write("   <div class=\"insert_wrap\">\r\n");
      out.write("   <form id=\"insertBoard_Form\" action=\"/nearby/board/insertBoard\" method=\"post\" enctype=\"multipart/form-data\" name=\"insertBoard_Form\">\r\n");
      out.write("      <div class=\"profileImg\">(프로필)</div>\r\n");
      out.write("      <span class=\"id_wrap\">\r\n");
      out.write("                <a href=\"/nearby/board/selectBoard\" id=\"board_writer\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginUser.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</a>\r\n");
      out.write("                   <input type=\"hidden\" name=\"id\" class=\"id\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginUser.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" >\r\n");
      out.write("       </span>\r\n");
      out.write("      <i class=\"fas fa-cog setting\"></i>\r\n");
      out.write("         \r\n");
      out.write("   \r\n");
      out.write("       <div class=\"myMap\">\r\n");
      out.write("        <span>내 위치 > <i class=\"fas fa-map-marker-alt\" style=\"color:pink; font-size:15px;\" onclick=\"map()\"></i>\r\n");
      out.write("           <input type=\"text\" name=\"location\" class=\"location\" value=\"\"  readonly=\"readonly\" >\r\n");
      out.write("        </span>\r\n");
      out.write("        </div>\r\n");
      out.write("        \r\n");
      out.write("        <div id=\"map_wrap\"></div>\r\n");
      out.write("       \r\n");
      out.write("   <div id=\"map\" style=\"width:500px; height:200px;\">\r\n");
      out.write("        <div class=\"search\" style=\"\">\r\n");
      out.write("            <input id=\"address\" type=\"text\" name=\"addr_remove\" placeholder=\"주소를 입력해주세요(ex. 서울특별시, 마포구, 노고산동)\" />\r\n");
      out.write("            <input id=\"submit\" type=\"button\" value=\"주소 검색\" />\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>  \r\n");
      out.write("       \r\n");
      out.write("       <input type=\"file\" name=\"file\" id=\"modify_file\" style=\"display:none;\" onchange=\"readURL(this);\">\r\n");
      out.write("      <div id=\"img_wrap\" >\r\n");
      out.write("           <label for=\"modify_file\" id=\"file_label\" class=\"file_label\"> \r\n");
      out.write("           <i class=\"fas fa-photo-video\" id=\"upload\" style=\"color:pink; font-size:70px;\"></i>\r\n");
      out.write("                사진 / 동영상을 올려주세요   </label> \r\n");
      out.write("                <img id=\"previewImg\" />\r\n");
      out.write("                <video id=\"previewVideo\" controls></video>\r\n");
      out.write("      </div>\r\n");
      out.write("      <div class=\"content_wrap\">\r\n");
      out.write("         <input type=\"text\" name=\"content\" id=\"content\" placeholder=\"당신의 일상을 공유해주세요\">\r\n");
      out.write("      </div>\r\n");
      out.write("      <button id=\"insertBtn\">게시</button>\r\n");
      out.write("   </form>\r\n");
      out.write("</div>\r\n");
      out.write("   \r\n");
      out.write("   \r\n");
      out.write("   <footer id=\"footer_wrap\"></footer>\r\n");
      out.write("   \r\n");
      out.write("   \r\n");
      out.write("   \r\n");
      out.write("   \r\n");
      out.write("   \r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
